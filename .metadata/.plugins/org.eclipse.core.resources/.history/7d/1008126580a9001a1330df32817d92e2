package com.ibm.service;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ibm.domain.Order;
import com.ibm.domain.ProductInfo;
import com.ibm.repository.OrderRepo;
import com.ibm.repository.ProductRepo;

@Service
public class OrderService {

	@Autowired
	OrderRepo orderRepo;
	
	@Autowired
	ProductRepo productRepo;

	public List<Order> findAll() {
		return orderRepo.findAllByOrderByOrderStatusAscCreateTimeAsc();
	}

	public Order findOne(Long orderId) throws Exception {
		Order order = orderRepo.findByOrderId(orderId);
		if (order == null) {
			throw new Exception("No Order Found");
		}
		return order;
	}
	
	
	  @Transactional
	    public void cancel(Long orderId, int amount) {
	        Order order = findOne(orderId);

	        order.setOrderStatus("Cancelled");
	        orderRepo.save(order);

	               increaseStock(order.getProducts(), amount);
	    }
	  
	  @Transactional
	    public void increaseStock(List<ProductInfo> productinfo) {
		 for(int i=0;i<productinfo.size();i++) {
	        ProductInfo productInfo = productRepo.findFirstByProductId(productinfo.get(i).getProductId());

	        int update = productInfo.getProductStock() + amount;
	        productInfo.setProductStock(update);
	        productRepo.save(productInfo);
		  }
	    }
}
